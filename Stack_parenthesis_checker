class stack:
    def __init__(self,string):
        self.stack = []
        self.top = -1
        self.str = string

    def push(self,value):
        self.top += 1
        self.stack.append(value)
    
    def pop(self):
        if self.top >= 0:
            temp = self.stack[self.top]
            self.stack.pop()
            self.top -= 1
            return temp
        else:
            print('Stack is empty')

    def display_stack(self):
        stack_top = self.top

        while stack_top >=0:
            print(self.stack[stack_top])
            stack_top-= 1

    def peek(self):
        return self.stack[self.stack]

    def size(self):
        return self.top + 1

    def is_empty(self):
        if self.top == -1:
            return True
        else:
            return False

    def check(self):
        open_list = ["[","{","("]
        close_list = ["]","}",")"]
        for i in self.str:
            if i in open_list:
                self.push(i)
            elif i in close_list:
                pos = close_list.index(i)
                if ((len(self.stack)> 0 and open_list[pos]==self.stack[len(self.stack)-1])):
                    self.stack.pop()
                else:
                    return 'Unbalanced'
        if len(self.stack) == 0:
            return 'Balanced'
        else:
            return 'Unbalanced'

stack1 = stack("{[]{()}}")
stack2 = stack("[{}{})(]")
stack3 = stack("((()")
stack3.push(4)
stack3.push(5)
print(stack3.display_stack())
# print(stack1.check())
# print(stack2.check())
# print(stack3.check())
